# Generated by Django 3.2.3 on 2022-03-01 06:38

import cheaptechguys.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=200, unique=True, verbose_name='email')),
                ('username', models.CharField(max_length=200, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('profile_image', models.ImageField(blank=True, default=cheaptechguys.models.get_default_profile_image, max_length=255, null=True, upload_to=cheaptechguys.models.get_profile_image_filepath)),
                ('hide_email', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='contact_us',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=200)),
                ('message', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=100)),
                ('Image1', models.FileField(null=True, upload_to='')),
                ('Image2', models.FileField(null=True, upload_to='')),
                ('Image3', models.FileField(null=True, upload_to='')),
                ('Image4', models.FileField(null=True, upload_to='')),
                ('Image5', models.FileField(null=True, upload_to='')),
                ('Before_price', models.CharField(max_length=200)),
                ('After_price', models.CharField(max_length=200)),
                ('discount', models.CharField(max_length=200)),
                ('choice', models.CharField(choices=[('Smart Phone', 'Smart Phone'), ('Camera', 'Camera'), ('Games', 'Games'), ('Smart Speakers', 'Smart Speakers'), ('Smart Watch', 'Smart Watch'), ('Tablets', 'Tablets'), ('Laptops', 'Laptops'), ('Mouse', 'Mouse'), ('keyboard', 'Keyboard'), ('Headphone', 'Headphone'), ('Monitors', 'Monitors'), ('TV', 'TV')], default=None, max_length=100)),
                ('Description1title', models.CharField(max_length=100)),
                ('Description2title', models.CharField(max_length=100)),
                ('Description3title', models.CharField(max_length=100)),
                ('Description4title', models.CharField(max_length=100)),
                ('Description1', models.TextField()),
                ('Description2', models.TextField()),
                ('Description3', models.TextField()),
                ('Description4', models.TextField()),
                ('Buy_link', models.URLField()),
                ('Dateofpublished', models.DateTimeField(auto_now_add=True)),
                ('Brand', models.CharField(max_length=100)),
                ('Colour', models.CharField(choices=[('Red', 'Red'), ('White', 'White'), ('Blue', 'Blue'), ('Brown', 'Brown'), ('Pink', 'Pink'), ('Green', 'Green'), ('Sky Blue', 'Sky Blue'), ('Yellow', 'Yellow'), ('Black', 'Black')], default=None, max_length=50)),
                ('Memory', models.CharField(blank=True, default=None, max_length=200)),
                ('cellular_technology', models.CharField(blank=True, default=None, max_length=200)),
                ('Included_items', models.CharField(blank=True, default=None, max_length=200)),
                ('Camera_quality', models.CharField(blank=True, default=None, max_length=200)),
                ('Model', models.CharField(blank=True, default=None, max_length=200)),
                ('screensize', models.CharField(blank=True, default=None, max_length=200)),
                ('RAM', models.CharField(blank=True, default=None, max_length=200)),
                ('ROM', models.CharField(blank=True, default=None, max_length=200)),
                ('Resolution', models.CharField(blank=True, default=None, max_length=200)),
                ('displaytype', models.CharField(blank=True, default=None, max_length=200)),
                ('Genre', models.CharField(blank=True, default=None, max_length=200)),
                ('Mode', models.CharField(blank=True, default=None, max_length=200)),
                ('releasedate', models.DateTimeField(auto_now_add=True)),
                ('Bluetoothconnectivity', models.CharField(blank=True, default=None, max_length=200)),
                ('waterresistance', models.CharField(blank=True, default=None, max_length=200)),
                ('connectivitytype', models.CharField(blank=True, default=None, max_length=200)),
                ('storage', models.CharField(blank=True, default=None, max_length=200)),
                ('Zoom', models.CharField(blank=True, default=None, max_length=200)),
                ('Graphicscoprocessor', models.CharField(blank=True, default=None, max_length=200)),
                ('Batterylife', models.CharField(blank=True, default=None, max_length=200)),
                ('compatibledevices', models.CharField(blank=True, default=None, max_length=200)),
                ('Refreshrate', models.CharField(blank=True, default=None, max_length=200)),
                ('Supportedinternetservices', models.CharField(blank=True, default=None, max_length=200)),
                ('Specialfeatures', models.CharField(blank=True, default=None, max_length=200)),
                ('series', models.CharField(blank=True, default=None, max_length=200)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product',
                'get_latest_by': ['-Dateofpublished'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='cheaptechguys.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
